"""Add user authentication tables

Revision ID: 9b893ecd560c
Revises:
Create Date: 2025-10-03 19:36:26.910650

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9b893ecd560c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False, comment='用户唯一标识符'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='用户名，用于登录'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='用户邮箱，用于登录和通知'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='密码哈希值'),
    sa.Column('full_name', sa.String(length=100), nullable=True, comment='用户全名'),
    sa.Column('avatar_url', sa.String(length=255), nullable=True, comment='用户头像URL'),
    sa.Column('bio', sa.Text(), nullable=True, comment='用户简介'),
    sa.Column('role', sa.String(length=20), nullable=True, comment='用户角色，如user、admin等'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='用户是否激活'),
    sa.Column('is_verified', sa.Boolean(), nullable=True, comment='用户是否已验证邮箱'),
    sa.Column('verification_token', sa.String(length=255), nullable=True, comment='邮箱验证令牌'),
    sa.Column('reset_password_token', sa.String(length=255), nullable=True, comment='密码重置令牌'),
    sa.Column('reset_password_expires', sa.DateTime(), nullable=True, comment='密码重置令牌过期时间'),
    sa.Column('last_login_at', sa.DateTime(), nullable=True, comment='最后登录时间'),
    sa.Column('login_count', sa.Integer(), nullable=True, comment='登录次数'),
    sa.Column('preferences', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='用户偏好设置，JSON格式'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('chat_sessions',
    sa.Column('id', sa.UUID(), nullable=False, comment='会话唯一标识符'),
    sa.Column('session_id', sa.String(), nullable=True, comment='会话外部ID，用于API引用'),
    sa.Column('user_id', sa.UUID(), nullable=True, comment='关联的用户ID'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='会话标题'),
    sa.Column('description', sa.Text(), nullable=True, comment='会话描述'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='会话状态，如active、archived等'),
    sa.Column('is_pinned', sa.Boolean(), nullable=True, comment='是否置顶'),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True, comment='最后活动时间'),
    sa.Column('message_count', sa.Integer(), nullable=True, comment='消息数量'),
    sa.Column('total_tokens', sa.Integer(), nullable=True, comment='总令牌数'),
    sa.Column('ai_model', sa.String(length=50), nullable=True, comment='使用的AI模型'),
    sa.Column('temperature', sa.Float(), nullable=True, comment='AI模型温度参数'),
    sa.Column('max_tokens', sa.Integer(), nullable=True, comment='最大令牌数限制'),
    sa.Column('context_data', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='上下文数据，JSON格式'),
    sa.Column('system_prompt', sa.Text(), nullable=True, comment='系统提示词'),
    sa.Column('session_metadata', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='元数据，JSON格式'),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='标签，JSON格式'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.UUID(), nullable=False, comment='消息唯一标识符'),
    sa.Column('message_id', sa.String(), nullable=True, comment='消息外部ID，用于API引用'),
    sa.Column('session_id', sa.UUID(), nullable=True, comment='关联的会话ID'),
    sa.Column('parent_message_id', sa.String(), nullable=True, comment='父消息ID，用于构建对话树'),
    sa.Column('role', sa.String(length=20), nullable=True, comment='消息角色，如user、assistant、system、tool'),
    sa.Column('content', sa.Text(), nullable=True, comment='消息内容'),
    sa.Column('message_type', sa.String(length=30), nullable=True, comment='消息类型，如text、image、file等'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='消息状态，如pending、sent、delivered、read、failed等'),
    sa.Column('is_edited', sa.Boolean(), nullable=True, comment='是否已编辑'),
    sa.Column('is_deleted', sa.Boolean(), nullable=True, comment='是否已删除'),
    sa.Column('is_pinned', sa.Boolean(), nullable=True, comment='是否置顶'),
    sa.Column('sent_at', sa.DateTime(), nullable=True, comment='发送时间'),
    sa.Column('delivered_at', sa.DateTime(), nullable=True, comment='送达时间'),
    sa.Column('read_at', sa.DateTime(), nullable=True, comment='已读时间'),
    sa.Column('model_name', sa.String(length=50), nullable=True, comment='使用的模型名称'),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True, comment='提示词令牌数'),
    sa.Column('completion_tokens', sa.Integer(), nullable=True, comment='完成词令牌数'),
    sa.Column('total_tokens', sa.Integer(), nullable=True, comment='总令牌数'),
    sa.Column('generation_time', sa.Float(), nullable=True, comment='生成时间（秒）'),
    sa.Column('structured_content', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='结构化内容，JSON格式'),
    sa.Column('attachments', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='附件信息，JSON格式'),
    sa.Column('user_rating', sa.Integer(), nullable=True, comment='用户评分（1-5）'),
    sa.Column('user_feedback', sa.Text(), nullable=True, comment='用户反馈'),
    sa.Column('message_metadata', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='元数据，JSON格式'),
    sa.Column('error_info', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='错误信息，JSON格式'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chat_messages')
    op.drop_table('chat_sessions')
    op.drop_table('users')
    # ### end Alembic commands ###

